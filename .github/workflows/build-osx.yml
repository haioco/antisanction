name: release macOS

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        type: string
  push:
    branches:
    tags:
      - 'v*.*.*'
      - main

env:
  OutputArch: "macos-64"
  OutputArchArm: "macos-arm64"
  OutputPath64:  "${{ github.workspace }}/v2rayN/Release/macos-64"
  OutputPathArm64:  "${{ github.workspace }}/v2rayN/Release/macos-arm64"

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v5.0.0
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - name: Setup
      uses: actions/setup-dotnet@v5.0.0
      with:
        dotnet-version: '8.0.x'

    - name: Determine release tag
      id: release_tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
        elif [ "${{ github.ref_type }}" == "tag" ]; then
          echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        else
          echo "tag=" >> $GITHUB_OUTPUT
        fi
        echo "Release tag: $(cat $GITHUB_OUTPUT | grep tag= | cut -d= -f2)"

    - name: Build
      run: |
        cd v2rayN 
        dotnet publish ./v2rayN.Desktop/v2rayN.Desktop.csproj -c Release -r osx-x64   --self-contained=true -o $OutputPath64
        dotnet publish ./v2rayN.Desktop/v2rayN.Desktop.csproj -c Release -r osx-arm64 --self-contained=true -o $OutputPathArm64
        dotnet publish ./AmazTool/AmazTool.csproj             -c Release -r osx-x64   --self-contained=true -p:PublishTrimmed=true -o $OutputPath64
        dotnet publish ./AmazTool/AmazTool.csproj             -c Release -r osx-arm64 --self-contained=true -p:PublishTrimmed=true -o $OutputPathArm64

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: v2rayN-macos
        path: |
          ${{ github.workspace }}/v2rayN/Release/macos*
    
    # release osx package
    - name: Package osx
      if: steps.release_tag.outputs.tag != ''
      run: |
        brew install create-dmg
        chmod 755 package-osx.sh
        ./package-osx.sh $OutputArch $OutputPath64 ${{ steps.release_tag.outputs.tag }}
        ./package-osx.sh $OutputArchArm $OutputPathArm64 ${{ steps.release_tag.outputs.tag }}
    
    - name: Upload dmg to release
      uses: svenstaro/upload-release-action@v2
      if: steps.release_tag.outputs.tag != ''
      with:
        file: ${{ github.workspace }}/v2rayN*.dmg
        tag: ${{ steps.release_tag.outputs.tag }}
        file_glob: true
        prerelease: true

    # release zip archive
    - name: Package release zip archive
      if: steps.release_tag.outputs.tag != ''
      run: |
        chmod 755 package-release-zip.sh
        ./package-release-zip.sh $OutputArch $OutputPath64
        ./package-release-zip.sh $OutputArchArm $OutputPathArm64
    
    - name: Upload zip archive to release
      uses: svenstaro/upload-release-action@v2
      if: steps.release_tag.outputs.tag != ''
      with:
        file: ${{ github.workspace }}/v2rayN*.zip
        tag: ${{ steps.release_tag.outputs.tag }}
        file_glob: true
        prerelease: true